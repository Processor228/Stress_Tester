version: '3.3'

services:
  web:
    build:
      .
    expose:
      - 80
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`${FASTAPI_URL}`)"
 
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=letsencrypt"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - .env


  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_URL}`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${USERNAME}:{HASHED_PASSWORD}"

volumes:
  postgres_data_prod:
  traefik-public-certificates:
